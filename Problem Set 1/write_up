In RegionFinder.java, I played around with maxColorDiff and minRegion to find the optimal setup for highlighting most of the desired material, but nothing more than the desired material. When maxColorDiff is too big, the program highlights far too many unwanted areas. When minRegion is too big, too many small, yet important, small objects and areas of material cannot be detected.

One of the issues of my method of region growing is that it cannot account for changes of lighting across a material. For example, if I try and highlight the ceiling, only a section will get highlighted, for the lighting slowly changes across the ceiling. This could be resolved by resetting the target color for each new pixel we evaluate, allowing for the target color to shift with the lighting. Additionally, my method has trouble tracking moving objects, for they constantly change color due to the lighting. Finally, my method is rather inefficent, for it requires a full scan of the image for every single frame. This slowness would be pronounced with a larger picture.